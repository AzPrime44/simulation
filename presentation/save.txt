import java.awt.*;
import javax.swing.*;
import java.awt.Dimension;
import java.util.Hashtable;
import java.awt.event.*;
import javax.swing.plaf.metal.*;
import javax.swing.JLabel;
import javax.swing.JSlider;
import javax.swing.SwingConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

public class RangeInput extends JPanel {

    private JSlider slider;
    private JTextField textField;
    private JLabel valueLabel;
    private JToggleButton toggleButton;

    public RangeInput() {
        // super(new BorderLayout());
        this.setLayout(new BoxLayout(this, BoxLayout.X_AXIS));
        this.setPreferredSize(new Dimension(getWidth(), 50));

        // Créer un JSlider pour représenter l'intervalle de valeurs
        slider = new JSlider(JSlider.HORIZONTAL, 0, 100, 50);

        // Ajouter un ChangeListener pour mettre à jour l'étiquette et le champ de texte
        slider.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                valueLabel.setText(Integer.toString(slider.getValue()));
                textField.setText(Integer.toString(slider.getValue()));
            }
        });

        // Créer un champ de texte pour saisir une valeur numérique
        textField = new JTextField(1);
        textField.setMaximumSize(new Dimension(70, 25));
        textField.setHorizontalAlignment(JTextField.CENTER);
        textField.setText(Integer.toString(slider.getValue()));

        // Ajouter un ActionListener pour mettre à jour le slider et l'étiquette
        textField.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int value = Integer.parseInt(textField.getText());
                slider.setValue(value);
                valueLabel.setText(Integer.toString(value));
            }
        });

        // Créer une étiquette pour afficher la valeur actuelle
        valueLabel = new JLabel(Integer.toString(slider.getValue()), SwingConstants.CENTER);
        valueLabel.setPreferredSize(new Dimension(50, 20));

        // Ajouter un bouton basculant pour basculer entre le slider et l'input
        toggleButton = new JToggleButton("Slider");
        toggleButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (toggleButton.isSelected()) {
                    // Afficher le champ de texte et masquer le slider
                    textField.setText(Integer.toString(slider.getValue()));
                    remove(slider);
                    add(textField, BorderLayout.CENTER);
                    toggleButton.setText("Input");
                } else {
                    // Afficher le slider et masquer le champ de texte
                    slider.setValue(Integer.parseInt(textField.getText()));
                    remove(textField);
                    add(slider, BorderLayout.CENTER);
                    toggleButton.setText("Slider");
                }
                // Redessiner l'interface utilisateur
                revalidate();
                repaint();
            }
        });

        // Ajouter les composants à la fenêtre
        add(valueLabel, BorderLayout.WEST);
        add(toggleButton, BorderLayout.EAST);
        add(slider, BorderLayout.CENTER);
    }
}
